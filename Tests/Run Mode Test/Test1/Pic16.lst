;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 4/2/2017 11:20:40 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2A87      	GOTO       647
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00D5      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00D6      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A0      	MOVWF      32
;Pic16.c,35 :: 		void interrupt(){
;Pic16.c,36 :: 		if(pir1.rcif){ //Uart receive interrupt
0x000D	0x1E8C      	BTFSS      PIR1, 5
0x000E	0x2847      	GOTO       L_interrupt0
;Pic16.c,37 :: 		rxByte = rcreg;   //Clear interrupt by reading receive register
0x000F	0x081A      	MOVF       RCREG, 0
0x0010	0x00B8      	MOVWF      _rxByte
;Pic16.c,38 :: 		++session;
0x0011	0x0AD4      	INCF       _session, 1
;Pic16.c,39 :: 		if(session==1){
0x0012	0x0854      	MOVF       _session, 0
0x0013	0x3A01      	XORLW      1
0x0014	0x1D03      	BTFSS      STATUS, 2
0x0015	0x281C      	GOTO       L_interrupt1
;Pic16.c,40 :: 		txByte= portb;
0x0016	0x0806      	MOVF       PORTB, 0
0x0017	0x00B7      	MOVWF      _txByte
;Pic16.c,41 :: 		uart1_write(txByte);
0x0018	0x0837      	MOVF       _txByte, 0
0x0019	0x00E6      	MOVWF      FARG_UART1_Write_data_
0x001A	0x2201      	CALL       _UART1_Write
;Pic16.c,42 :: 		return;
0x001B	0x2847      	GOTO       L__interrupt22
;Pic16.c,43 :: 		}
L_interrupt1:
;Pic16.c,44 :: 		else if(session==2){
0x001C	0x0854      	MOVF       _session, 0
0x001D	0x3A02      	XORLW      2
0x001E	0x1D03      	BTFSS      STATUS, 2
0x001F	0x2826      	GOTO       L_interrupt3
;Pic16.c,45 :: 		txByte= Lo(anIn);
0x0020	0x0844      	MOVF       _anIn, 0
0x0021	0x00B7      	MOVWF      _txByte
;Pic16.c,46 :: 		uart1_write(txByte);
0x0022	0x0844      	MOVF       _anIn, 0
0x0023	0x00E6      	MOVWF      FARG_UART1_Write_data_
0x0024	0x2201      	CALL       _UART1_Write
;Pic16.c,47 :: 		return;
0x0025	0x2847      	GOTO       L__interrupt22
;Pic16.c,48 :: 		}
L_interrupt3:
;Pic16.c,49 :: 		else if(session==3){
0x0026	0x0854      	MOVF       _session, 0
0x0027	0x3A03      	XORLW      3
0x0028	0x1D03      	BTFSS      STATUS, 2
0x0029	0x2830      	GOTO       L_interrupt5
;Pic16.c,50 :: 		txByte=Hi(anIn);
0x002A	0x0845      	MOVF       _anIn+1, 0
0x002B	0x00B7      	MOVWF      _txByte
;Pic16.c,51 :: 		uart1_write(txByte);
0x002C	0x0845      	MOVF       _anIn+1, 0
0x002D	0x00E6      	MOVWF      FARG_UART1_Write_data_
0x002E	0x2201      	CALL       _UART1_Write
;Pic16.c,52 :: 		return;
0x002F	0x2847      	GOTO       L__interrupt22
;Pic16.c,53 :: 		}
L_interrupt5:
;Pic16.c,54 :: 		else if(session==4){
0x0030	0x0854      	MOVF       _session, 0
0x0031	0x3A04      	XORLW      4
0x0032	0x1D03      	BTFSS      STATUS, 2
0x0033	0x2837      	GOTO       L_interrupt7
;Pic16.c,55 :: 		dio=rxByte;
0x0034	0x0838      	MOVF       _rxByte, 0
0x0035	0x0086      	MOVWF      PORTB
;Pic16.c,56 :: 		return;
0x0036	0x2847      	GOTO       L__interrupt22
;Pic16.c,57 :: 		}
L_interrupt7:
;Pic16.c,58 :: 		else if(session==5){
0x0037	0x0854      	MOVF       _session, 0
0x0038	0x3A05      	XORLW      5
0x0039	0x1D03      	BTFSS      STATUS, 2
0x003A	0x283E      	GOTO       L_interrupt9
;Pic16.c,59 :: 		Lo(anOut)=rxByte;
0x003B	0x0838      	MOVF       _rxByte, 0
0x003C	0x00D2      	MOVWF      _anOut
;Pic16.c,60 :: 		return;
0x003D	0x2847      	GOTO       L__interrupt22
;Pic16.c,61 :: 		}
L_interrupt9:
;Pic16.c,62 :: 		else if(session==6){
0x003E	0x0854      	MOVF       _session, 0
0x003F	0x3A06      	XORLW      6
0x0040	0x1D03      	BTFSS      STATUS, 2
0x0041	0x2846      	GOTO       L_interrupt11
;Pic16.c,63 :: 		Hi(anOut)=rxByte;
0x0042	0x0838      	MOVF       _rxByte, 0
0x0043	0x00D3      	MOVWF      _anOut+1
;Pic16.c,64 :: 		session=0;
0x0044	0x01D4      	CLRF       _session
;Pic16.c,65 :: 		return;
0x0045	0x2847      	GOTO       L__interrupt22
;Pic16.c,66 :: 		}
L_interrupt11:
;Pic16.c,67 :: 		return;
0x0046	0x2847      	GOTO       L__interrupt22
;Pic16.c,68 :: 		}
L_interrupt0:
;Pic16.c,69 :: 		}
L_end_interrupt:
L__interrupt22:
0x0047	0x0820      	MOVF       32, 0
0x0048	0x00F0      	MOVWF      R0
0x0049	0x0856      	MOVF       ___savePCLATH, 0
0x004A	0x008A      	MOVWF      PCLATH
0x004B	0x0E55      	SWAPF      ___saveSTATUS, 0
0x004C	0x0083      	MOVWF      STATUS
0x004D	0x0EFF      	SWAPF      R15, 1
0x004E	0x0E7F      	SWAPF      R15, 0
0x004F	0x0009      	RETFIE
; end of _interrupt
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x0050	0x0000      	NOP
0x0051	0x0000      	NOP
0x0052	0x0000      	NOP
0x0053	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x0054	0x0008      	RETURN
; end of _Delay_1us
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x0055	0x3042      	MOVLW      66
0x0056	0x1283      	BCF        STATUS, 5
0x0057	0x1303      	BCF        STATUS, 6
0x0058	0x00FD      	MOVWF      R13
L_Delay_50us2:
0x0059	0x0BFD      	DECFSZ     R13, 1
0x005A	0x2859      	GOTO       L_Delay_50us2
0x005B	0x0000      	NOP
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x005C	0x0008      	RETURN
; end of _Delay_50us
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x005D	0x301D      	MOVLW      29
0x005E	0x1283      	BCF        STATUS, 5
0x005F	0x1303      	BCF        STATUS, 6
0x0060	0x00FC      	MOVWF      R12
0x0061	0x3091      	MOVLW      145
0x0062	0x00FD      	MOVWF      R13
L_Delay_5500us5:
0x0063	0x0BFD      	DECFSZ     R13, 1
0x0064	0x2863      	GOTO       L_Delay_5500us5
0x0065	0x0BFC      	DECFSZ     R12, 1
0x0066	0x2863      	GOTO       L_Delay_5500us5
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x0067	0x0008      	RETURN
; end of _Delay_5500us
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x0068	0x1283      	BCF        STATUS, 5
0x0069	0x1303      	BCF        STATUS, 6
0x006A	0x1BE5      	BTFSC      FARG_Lcd_Cmd_out_char, 7
0x006B	0x286E      	GOTO       L__Lcd_Cmd21
0x006C	0x1188      	BCF        LCD_D7, BitPos(LCD_D7+0)
0x006D	0x286F      	GOTO       L__Lcd_Cmd22
L__Lcd_Cmd21:
0x006E	0x1588      	BSF        LCD_D7, BitPos(LCD_D7+0)
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x006F	0x1B65      	BTFSC      FARG_Lcd_Cmd_out_char, 6
0x0070	0x2873      	GOTO       L__Lcd_Cmd23
0x0071	0x1108      	BCF        LCD_D6, BitPos(LCD_D6+0)
0x0072	0x2874      	GOTO       L__Lcd_Cmd24
L__Lcd_Cmd23:
0x0073	0x1508      	BSF        LCD_D6, BitPos(LCD_D6+0)
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x0074	0x1AE5      	BTFSC      FARG_Lcd_Cmd_out_char, 5
0x0075	0x2878      	GOTO       L__Lcd_Cmd25
0x0076	0x1088      	BCF        LCD_D5, BitPos(LCD_D5+0)
0x0077	0x2879      	GOTO       L__Lcd_Cmd26
L__Lcd_Cmd25:
0x0078	0x1488      	BSF        LCD_D5, BitPos(LCD_D5+0)
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x0079	0x1A65      	BTFSC      FARG_Lcd_Cmd_out_char, 4
0x007A	0x287D      	GOTO       L__Lcd_Cmd27
0x007B	0x1008      	BCF        LCD_D4, BitPos(LCD_D4+0)
0x007C	0x287E      	GOTO       L__Lcd_Cmd28
L__Lcd_Cmd27:
0x007D	0x1408      	BSF        LCD_D4, BitPos(LCD_D4+0)
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x007E	0x1846      	BTFSC      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x007F	0x2882      	GOTO       L__Lcd_Cmd29
0x0080	0x1688      	BSF        LCD_RS, BitPos(LCD_RS+0)
0x0081	0x2883      	GOTO       L__Lcd_Cmd30
L__Lcd_Cmd29:
0x0082	0x1288      	BCF        LCD_RS, BitPos(LCD_RS+0)
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x0083	0x1608      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,29 :: 		
0x0084	0x2050      	CALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x0085	0x1208      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,33 :: 		
0x0086	0x19E5      	BTFSC      FARG_Lcd_Cmd_out_char, 3
0x0087	0x288A      	GOTO       L__Lcd_Cmd31
0x0088	0x1188      	BCF        LCD_D7, BitPos(LCD_D7+0)
0x0089	0x288B      	GOTO       L__Lcd_Cmd32
L__Lcd_Cmd31:
0x008A	0x1588      	BSF        LCD_D7, BitPos(LCD_D7+0)
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x008B	0x1965      	BTFSC      FARG_Lcd_Cmd_out_char, 2
0x008C	0x288F      	GOTO       L__Lcd_Cmd33
0x008D	0x1108      	BCF        LCD_D6, BitPos(LCD_D6+0)
0x008E	0x2890      	GOTO       L__Lcd_Cmd34
L__Lcd_Cmd33:
0x008F	0x1508      	BSF        LCD_D6, BitPos(LCD_D6+0)
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x0090	0x18E5      	BTFSC      FARG_Lcd_Cmd_out_char, 1
0x0091	0x2894      	GOTO       L__Lcd_Cmd35
0x0092	0x1088      	BCF        LCD_D5, BitPos(LCD_D5+0)
0x0093	0x2895      	GOTO       L__Lcd_Cmd36
L__Lcd_Cmd35:
0x0094	0x1488      	BSF        LCD_D5, BitPos(LCD_D5+0)
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x0095	0x1865      	BTFSC      FARG_Lcd_Cmd_out_char, 0
0x0096	0x2899      	GOTO       L__Lcd_Cmd37
0x0097	0x1008      	BCF        LCD_D4, BitPos(LCD_D4+0)
0x0098	0x289A      	GOTO       L__Lcd_Cmd38
L__Lcd_Cmd37:
0x0099	0x1408      	BSF        LCD_D4, BitPos(LCD_D4+0)
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x009A	0x1846      	BTFSC      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x009B	0x289E      	GOTO       L__Lcd_Cmd39
0x009C	0x1688      	BSF        LCD_RS, BitPos(LCD_RS+0)
0x009D	0x289F      	GOTO       L__Lcd_Cmd40
L__Lcd_Cmd39:
0x009E	0x1288      	BCF        LCD_RS, BitPos(LCD_RS+0)
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x009F	0x1608      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,41 :: 		
0x00A0	0x2050      	CALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x00A1	0x1208      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,44 :: 		
0x00A2	0x1C46      	BTFSS      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x00A3	0x28A6      	GOTO       L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x00A4	0x205D      	CALL       _Delay_5500us
0x00A5	0x28A7      	GOTO       L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x00A6	0x2055      	CALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x00A7	0x0008      	RETURN
; end of _Lcd_Cmd
_Div_16X16_U:
;__Lib_Math.c,215 :: 		
;__Lib_Math.c,222 :: 		
0x00A8	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,223 :: 		
0x00A9	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,224 :: 		
0x00AA	0x01F8      	CLRF       R8
;__Lib_Math.c,225 :: 		
0x00AB	0x01F9      	CLRF       R9
;__Lib_Math.c,226 :: 		
0x00AC	0x3010      	MOVLW      16
;__Lib_Math.c,227 :: 		
0x00AD	0x00FC      	MOVWF      R12
;__Lib_Math.c,228 :: 		
0x00AE	0x0D71      	RLF        R1, 0
;__Lib_Math.c,229 :: 		
0x00AF	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,230 :: 		
0x00B0	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,231 :: 		
0x00B1	0x0874      	MOVF       R4, 0
;__Lib_Math.c,232 :: 		
0x00B2	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,233 :: 		
0x00B3	0x0875      	MOVF       R5, 0
;__Lib_Math.c,234 :: 		
0x00B4	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,235 :: 		
0x00B5	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,236 :: 		
0x00B6	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,237 :: 		
0x00B7	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,238 :: 		
0x00B8	0x28C0      	GOTO       $+8
;__Lib_Math.c,239 :: 		
0x00B9	0x0874      	MOVF       R4, 0
;__Lib_Math.c,240 :: 		
0x00BA	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,241 :: 		
0x00BB	0x0875      	MOVF       R5, 0
;__Lib_Math.c,242 :: 		
0x00BC	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,243 :: 		
0x00BD	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,244 :: 		
0x00BE	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,245 :: 		
0x00BF	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,246 :: 		
0x00C0	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,247 :: 		
0x00C1	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,248 :: 		
0x00C2	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,249 :: 		
0x00C3	0x28AE      	GOTO       $-21
;__Lib_Math.c,251 :: 		
L_end_Div_16X16_U:
0x00C4	0x0008      	RETURN
; end of _Div_16X16_U
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x00C5	0x1283      	BCF        STATUS, 5
0x00C6	0x1303      	BCF        STATUS, 6
0x00C7	0x1046      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,53 :: 		
0x00C8	0x0860      	MOVF       FARG_Lcd_Chr_CP_out_char, 0
0x00C9	0x00E5      	MOVWF      FARG_Lcd_Cmd_out_char
0x00CA	0x2068      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x00CB	0x1446      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x00CC	0x0008      	RETURN
; end of _Lcd_Chr_CP
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x00CD	0x1283      	BCF        STATUS, 5
0x00CE	0x1303      	BCF        STATUS, 6
0x00CF	0x083A      	MOVF       ___DoICPAddr+1, 0
0x00D0	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x00D1	0x0839      	MOVF       ___DoICPAddr, 0
0x00D2	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x00D3	0x0008      	RETURN
; end of _____DoICP
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x00D4	0x301D      	MOVLW      29
0x00D5	0x1283      	BCF        STATUS, 5
0x00D6	0x1303      	BCF        STATUS, 6
0x00D7	0x00FD      	MOVWF      R13
L_Delay_22us1:
0x00D8	0x0BFD      	DECFSZ     R13, 1
0x00D9	0x28D8      	GOTO       L_Delay_22us1
;__Lib_Delays.c,17 :: 		}
L_end_Delay_22us:
0x00DA	0x0008      	RETURN
; end of _Delay_22us
_WordToStr:
;__Lib_Conversions.c,84 :: 		
;__Lib_Conversions.c,89 :: 		
0x00DB	0x1283      	BCF        STATUS, 5
0x00DC	0x1303      	BCF        STATUS, 6
0x00DD	0x01E3      	CLRF       WordToStr_len_L0
L_WordToStr6:
0x00DE	0x3005      	MOVLW      5
0x00DF	0x0263      	SUBWF      WordToStr_len_L0, 0
0x00E0	0x1803      	BTFSC      STATUS, 0
0x00E1	0x28E9      	GOTO       L_WordToStr7
;__Lib_Conversions.c,90 :: 		
0x00E2	0x0863      	MOVF       WordToStr_len_L0, 0
0x00E3	0x0762      	ADDWF      FARG_WordToStr_output, 0
0x00E4	0x0084      	MOVWF      FSR
0x00E5	0x3020      	MOVLW      32
0x00E6	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,89 :: 		
0x00E7	0x0AE3      	INCF       WordToStr_len_L0, 1
;__Lib_Conversions.c,90 :: 		
0x00E8	0x28DE      	GOTO       L_WordToStr6
L_WordToStr7:
;__Lib_Conversions.c,91 :: 		
0x00E9	0x0863      	MOVF       WordToStr_len_L0, 0
0x00EA	0x0762      	ADDWF      FARG_WordToStr_output, 0
0x00EB	0x0084      	MOVWF      FSR
0x00EC	0x0180      	CLRF       INDF
0x00ED	0x03E3      	DECF       WordToStr_len_L0, 1
;__Lib_Conversions.c,93 :: 		
L_WordToStr9:
;__Lib_Conversions.c,94 :: 		
0x00EE	0x0863      	MOVF       WordToStr_len_L0, 0
0x00EF	0x0762      	ADDWF      FARG_WordToStr_output, 0
0x00F0	0x00E4      	MOVWF      FLOC__WordToStr
0x00F1	0x300A      	MOVLW      10
0x00F2	0x00F4      	MOVWF      R4
0x00F3	0x01F5      	CLRF       R4+1
0x00F4	0x0860      	MOVF       FARG_WordToStr_input, 0
0x00F5	0x00F0      	MOVWF      R0
0x00F6	0x0861      	MOVF       FARG_WordToStr_input+1, 0
0x00F7	0x00F1      	MOVWF      R0+1
0x00F8	0x20A8      	CALL       _Div_16X16_U
0x00F9	0x0878      	MOVF       R8, 0
0x00FA	0x00F0      	MOVWF      R0
0x00FB	0x0879      	MOVF       R8+1, 0
0x00FC	0x00F1      	MOVWF      R0+1
0x00FD	0x3030      	MOVLW      48
0x00FE	0x07F0      	ADDWF      R0, 1
0x00FF	0x0864      	MOVF       FLOC__WordToStr, 0
0x0100	0x0084      	MOVWF      FSR
0x0101	0x0870      	MOVF       R0, 0
0x0102	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,95 :: 		
0x0103	0x300A      	MOVLW      10
0x0104	0x00F4      	MOVWF      R4
0x0105	0x01F5      	CLRF       R4+1
0x0106	0x0860      	MOVF       FARG_WordToStr_input, 0
0x0107	0x00F0      	MOVWF      R0
0x0108	0x0861      	MOVF       FARG_WordToStr_input+1, 0
0x0109	0x00F1      	MOVWF      R0+1
0x010A	0x20A8      	CALL       _Div_16X16_U
0x010B	0x0870      	MOVF       R0, 0
0x010C	0x00E0      	MOVWF      FARG_WordToStr_input
0x010D	0x0871      	MOVF       R0+1, 0
0x010E	0x00E1      	MOVWF      FARG_WordToStr_input+1
;__Lib_Conversions.c,96 :: 		
0x010F	0x3000      	MOVLW      0
0x0110	0x0671      	XORWF      R0+1, 0
0x0111	0x1D03      	BTFSS      STATUS, 2
0x0112	0x2915      	GOTO       L__WordToStr109
0x0113	0x3000      	MOVLW      0
0x0114	0x0670      	XORWF      R0, 0
L__WordToStr109:
0x0115	0x1D03      	BTFSS      STATUS, 2
0x0116	0x2918      	GOTO       L_WordToStr11
;__Lib_Conversions.c,97 :: 		
0x0117	0x291A      	GOTO       L_WordToStr10
L_WordToStr11:
;__Lib_Conversions.c,98 :: 		
0x0118	0x03E3      	DECF       WordToStr_len_L0, 1
;__Lib_Conversions.c,99 :: 		
0x0119	0x28EE      	GOTO       L_WordToStr9
L_WordToStr10:
;__Lib_Conversions.c,100 :: 		
L_end_WordToStr:
0x011A	0x0008      	RETURN
; end of _WordToStr
_ADC_Init:
;__Lib_ADC_88X.c,11 :: 		
;__Lib_ADC_88X.c,12 :: 		
0x011B	0x30FF      	MOVLW      _ADC_Get_Sample
0x011C	0x1283      	BCF        STATUS, 5
0x011D	0x1303      	BCF        STATUS, 6
0x011E	0x00C7      	MOVWF      _ADC_Get_Sample_Ptr
0x011F	0x30FF      	MOVLW      hi_addr(_ADC_Get_Sample)
0x0120	0x00C8      	MOVWF      _ADC_Get_Sample_Ptr+1
0x0121	0x30FF      	MOVLW      FARG_ADC_Get_Sample_channel
0x0122	0x00C9      	MOVWF      _ADC_Get_Sample_Ptr+2
0x0123	0x30FF      	MOVLW      hi_addr(FARG_ADC_Get_Sample_channel)
;__Lib_ADC_88X.c,14 :: 		
0x0124	0x30C3      	MOVLW      195
0x0125	0x059F      	ANDWF      ADCON0, 1
;__Lib_ADC_88X.c,18 :: 		
0x0126	0x30C0      	MOVLW      192
0x0127	0x009F      	MOVWF      ADCON0
;__Lib_ADC_88X.c,19 :: 		
0x0128	0x1683      	BSF        STATUS, 5
0x0129	0x179F      	BSF        ADCON1, 7
;__Lib_ADC_88X.c,22 :: 		
0x012A	0x1283      	BCF        STATUS, 5
0x012B	0x141F      	BSF        ADCON0, 0
;__Lib_ADC_88X.c,23 :: 		
L_end_ADC_Init:
0x012C	0x0008      	RETURN
; end of _ADC_Init
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x012D	0x293F      	GOTO       L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x012E	0x3080      	MOVLW      128
0x012F	0x1283      	BCF        STATUS, 5
0x0130	0x1303      	BCF        STATUS, 6
0x0131	0x00D7      	MOVWF      FARG_Lcd_Out_row
0x0132	0x2952      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x0133	0x30C0      	MOVLW      192
0x0134	0x00D7      	MOVWF      FARG_Lcd_Out_row
0x0135	0x2952      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x0136	0x3094      	MOVLW      148
0x0137	0x00D7      	MOVWF      FARG_Lcd_Out_row
0x0138	0x2952      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x0139	0x30D4      	MOVLW      212
0x013A	0x00D7      	MOVWF      FARG_Lcd_Out_row
0x013B	0x2952      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x013C	0x3080      	MOVLW      128
0x013D	0x00D7      	MOVWF      FARG_Lcd_Out_row
;__Lib_Lcd.c,193 :: 		
0x013E	0x2952      	GOTO       L_Lcd_Out12
L_Lcd_Out11:
0x013F	0x1283      	BCF        STATUS, 5
0x0140	0x1303      	BCF        STATUS, 6
0x0141	0x0857      	MOVF       FARG_Lcd_Out_row, 0
0x0142	0x3A01      	XORLW      1
0x0143	0x1903      	BTFSC      STATUS, 2
0x0144	0x292E      	GOTO       L_Lcd_Out13
0x0145	0x0857      	MOVF       FARG_Lcd_Out_row, 0
0x0146	0x3A02      	XORLW      2
0x0147	0x1903      	BTFSC      STATUS, 2
0x0148	0x2933      	GOTO       L_Lcd_Out14
0x0149	0x0857      	MOVF       FARG_Lcd_Out_row, 0
0x014A	0x3A03      	XORLW      3
0x014B	0x1903      	BTFSC      STATUS, 2
0x014C	0x2936      	GOTO       L_Lcd_Out15
0x014D	0x0857      	MOVF       FARG_Lcd_Out_row, 0
0x014E	0x3A04      	XORLW      4
0x014F	0x1903      	BTFSC      STATUS, 2
0x0150	0x2939      	GOTO       L_Lcd_Out16
0x0151	0x293C      	GOTO       L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x0152	0x0358      	DECF       FARG_Lcd_Out_column, 0
0x0153	0x00F0      	MOVWF      R0
0x0154	0x0857      	MOVF       FARG_Lcd_Out_row, 0
0x0155	0x07F0      	ADDWF      R0, 1
0x0156	0x0870      	MOVF       R0, 0
0x0157	0x00D7      	MOVWF      FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x0158	0x0870      	MOVF       R0, 0
0x0159	0x00E5      	MOVWF      FARG_Lcd_Cmd_out_char
0x015A	0x2068      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x015B	0x1046      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,198 :: 		
0x015C	0x01DA      	CLRF       Lcd_Out_i_L0
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x015D	0x085A      	MOVF       Lcd_Out_i_L0, 0
0x015E	0x0759      	ADDWF      FARG_Lcd_Out_text, 0
0x015F	0x0084      	MOVWF      FSR
0x0160	0x0800      	MOVF       INDF, 0
0x0161	0x1903      	BTFSC      STATUS, 2
0x0162	0x296B      	GOTO       L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x0163	0x085A      	MOVF       Lcd_Out_i_L0, 0
0x0164	0x0759      	ADDWF      FARG_Lcd_Out_text, 0
0x0165	0x0084      	MOVWF      FSR
0x0166	0x0800      	MOVF       INDF, 0
0x0167	0x00E0      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0168	0x20C5      	CALL       _Lcd_Chr_CP
0x0169	0x0ADA      	INCF       Lcd_Out_i_L0, 1
0x016A	0x295D      	GOTO       L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x016B	0x1446      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x016C	0x0008      	RETURN
; end of _Lcd_Out
_IntToStr:
;__Lib_Conversions.c,146 :: 		
;__Lib_Conversions.c,152 :: 		
0x016D	0x1283      	BCF        STATUS, 5
0x016E	0x1303      	BCF        STATUS, 6
0x016F	0x01DC      	CLRF       IntToStr_negative_L0
0x0170	0x01DD      	CLRF       IntToStr_negative_L0+1
;__Lib_Conversions.c,153 :: 		
0x0171	0x0857      	MOVF       FARG_IntToStr_input, 0
0x0172	0x00DE      	MOVWF      IntToStr_inword_L0
0x0173	0x0858      	MOVF       FARG_IntToStr_input+1, 0
0x0174	0x00DF      	MOVWF      IntToStr_inword_L0+1
;__Lib_Conversions.c,154 :: 		
0x0175	0x3080      	MOVLW      128
0x0176	0x0658      	XORWF      FARG_IntToStr_input+1, 0
0x0177	0x00F0      	MOVWF      R0
0x0178	0x3080      	MOVLW      128
0x0179	0x0270      	SUBWF      R0, 0
0x017A	0x1D03      	BTFSS      STATUS, 2
0x017B	0x297E      	GOTO       L__IntToStr115
0x017C	0x3000      	MOVLW      0
0x017D	0x0257      	SUBWF      FARG_IntToStr_input, 0
L__IntToStr115:
0x017E	0x1803      	BTFSC      STATUS, 0
0x017F	0x298C      	GOTO       L_IntToStr23
;__Lib_Conversions.c,155 :: 		
0x0180	0x3001      	MOVLW      1
0x0181	0x00DC      	MOVWF      IntToStr_negative_L0
0x0182	0x3000      	MOVLW      0
0x0183	0x00DD      	MOVWF      IntToStr_negative_L0+1
;__Lib_Conversions.c,156 :: 		
0x0184	0x0857      	MOVF       FARG_IntToStr_input, 0
0x0185	0x3C00      	SUBLW      0
0x0186	0x00DE      	MOVWF      IntToStr_inword_L0
0x0187	0x0858      	MOVF       FARG_IntToStr_input+1, 0
0x0188	0x1C03      	BTFSS      STATUS, 0
0x0189	0x3E01      	ADDLW      1
0x018A	0x01DF      	CLRF       IntToStr_inword_L0+1
0x018B	0x02DF      	SUBWF      IntToStr_inword_L0+1, 1
;__Lib_Conversions.c,157 :: 		
L_IntToStr23:
;__Lib_Conversions.c,158 :: 		
0x018C	0x085E      	MOVF       IntToStr_inword_L0, 0
0x018D	0x00E0      	MOVWF      FARG_WordToStr_input
0x018E	0x085F      	MOVF       IntToStr_inword_L0+1, 0
0x018F	0x00E1      	MOVWF      FARG_WordToStr_input+1
0x0190	0x0859      	MOVF       FARG_IntToStr_output, 0
0x0191	0x00E2      	MOVWF      FARG_WordToStr_output
0x0192	0x20DB      	CALL       _WordToStr
;__Lib_Conversions.c,160 :: 		
0x0193	0x3006      	MOVLW      6
0x0194	0x00DA      	MOVWF      IntToStr_i_L0
0x0195	0x3000      	MOVLW      0
0x0196	0x00DB      	MOVWF      IntToStr_i_L0+1
;__Lib_Conversions.c,161 :: 		
L_IntToStr24:
0x0197	0x085B      	MOVF       IntToStr_i_L0+1, 0
0x0198	0x3C00      	SUBLW      0
0x0199	0x1D03      	BTFSS      STATUS, 2
0x019A	0x299D      	GOTO       L__IntToStr116
0x019B	0x085A      	MOVF       IntToStr_i_L0, 0
0x019C	0x3C00      	SUBLW      0
L__IntToStr116:
0x019D	0x1803      	BTFSC      STATUS, 0
0x019E	0x29B8      	GOTO       L_IntToStr25
;__Lib_Conversions.c,162 :: 		
0x019F	0x085A      	MOVF       IntToStr_i_L0, 0
0x01A0	0x0759      	ADDWF      FARG_IntToStr_output, 0
0x01A1	0x00F2      	MOVWF      R2
0x01A2	0x3001      	MOVLW      1
0x01A3	0x025A      	SUBWF      IntToStr_i_L0, 0
0x01A4	0x00F0      	MOVWF      R0
0x01A5	0x3000      	MOVLW      0
0x01A6	0x1C03      	BTFSS      STATUS, 0
0x01A7	0x3E01      	ADDLW      1
0x01A8	0x025B      	SUBWF      IntToStr_i_L0+1, 0
0x01A9	0x00F1      	MOVWF      R0+1
0x01AA	0x0870      	MOVF       R0, 0
0x01AB	0x0759      	ADDWF      FARG_IntToStr_output, 0
0x01AC	0x0084      	MOVWF      FSR
0x01AD	0x0800      	MOVF       INDF, 0
0x01AE	0x00F0      	MOVWF      R0
0x01AF	0x0872      	MOVF       R2, 0
0x01B0	0x0084      	MOVWF      FSR
0x01B1	0x0870      	MOVF       R0, 0
0x01B2	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,163 :: 		
0x01B3	0x3001      	MOVLW      1
0x01B4	0x02DA      	SUBWF      IntToStr_i_L0, 1
0x01B5	0x1C03      	BTFSS      STATUS, 0
0x01B6	0x03DB      	DECF       IntToStr_i_L0+1, 1
;__Lib_Conversions.c,164 :: 		
0x01B7	0x2997      	GOTO       L_IntToStr24
L_IntToStr25:
;__Lib_Conversions.c,165 :: 		
0x01B8	0x0859      	MOVF       FARG_IntToStr_output, 0
0x01B9	0x0084      	MOVWF      FSR
0x01BA	0x3020      	MOVLW      32
0x01BB	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,166 :: 		
0x01BC	0x085C      	MOVF       IntToStr_negative_L0, 0
0x01BD	0x045D      	IORWF      IntToStr_negative_L0+1, 0
0x01BE	0x1903      	BTFSC      STATUS, 2
0x01BF	0x29D6      	GOTO       L_IntToStr26
;__Lib_Conversions.c,167 :: 		
0x01C0	0x01DA      	CLRF       IntToStr_i_L0
0x01C1	0x01DB      	CLRF       IntToStr_i_L0+1
;__Lib_Conversions.c,168 :: 		
L_IntToStr27:
0x01C2	0x085A      	MOVF       IntToStr_i_L0, 0
0x01C3	0x0759      	ADDWF      FARG_IntToStr_output, 0
0x01C4	0x0084      	MOVWF      FSR
0x01C5	0x0800      	MOVF       INDF, 0
0x01C6	0x3A20      	XORLW      32
0x01C7	0x1D03      	BTFSS      STATUS, 2
0x01C8	0x29CD      	GOTO       L_IntToStr28
0x01C9	0x0ADA      	INCF       IntToStr_i_L0, 1
0x01CA	0x1903      	BTFSC      STATUS, 2
0x01CB	0x0ADB      	INCF       IntToStr_i_L0+1, 1
0x01CC	0x29C2      	GOTO       L_IntToStr27
L_IntToStr28:
;__Lib_Conversions.c,169 :: 		
0x01CD	0x3001      	MOVLW      1
0x01CE	0x02DA      	SUBWF      IntToStr_i_L0, 1
0x01CF	0x1C03      	BTFSS      STATUS, 0
0x01D0	0x03DB      	DECF       IntToStr_i_L0+1, 1
;__Lib_Conversions.c,170 :: 		
0x01D1	0x085A      	MOVF       IntToStr_i_L0, 0
0x01D2	0x0759      	ADDWF      FARG_IntToStr_output, 0
0x01D3	0x0084      	MOVWF      FSR
0x01D4	0x302D      	MOVLW      45
0x01D5	0x0080      	MOVWF      INDF
L_IntToStr26:
;__Lib_Conversions.c,171 :: 		
L_end_IntToStr:
0x01D6	0x0008      	RETURN
; end of _IntToStr
_SPI1_Write:
;__Lib_SPI_c345.c,67 :: 		
;__Lib_SPI_c345.c,70 :: 		
0x01D7	0x1283      	BCF        STATUS, 5
0x01D8	0x1303      	BCF        STATUS, 6
0x01D9	0x0857      	MOVF       FARG_SPI1_Write_data_, 0
0x01DA	0x0093      	MOVWF      SSPBUF
;__Lib_SPI_c345.c,71 :: 		
L_SPI1_Write8:
0x01DB	0x1683      	BSF        STATUS, 5
0x01DC	0x1814      	BTFSC      SSPSTAT, 0
0x01DD	0x29E0      	GOTO       L_SPI1_Write9
;__Lib_SPI_c345.c,72 :: 		
0x01DE	0x0000      	NOP
0x01DF	0x29DB      	GOTO       L_SPI1_Write8
L_SPI1_Write9:
;__Lib_SPI_c345.c,73 :: 		
0x01E0	0x1283      	BCF        STATUS, 5
0x01E1	0x0813      	MOVF       SSPBUF, 0
0x01E2	0x00F0      	MOVWF      R0
;__Lib_SPI_c345.c,75 :: 		
L_end_SPI1_Write:
0x01E3	0x0008      	RETURN
; end of _SPI1_Write
_SPI1_Init:
;__Lib_SPI_c345.c,16 :: 		
;__Lib_SPI_c345.c,19 :: 		
0x01E4	0x1683      	BSF        STATUS, 5
0x01E5	0x1303      	BCF        STATUS, 6
0x01E6	0x1287      	BCF        TRISC5_bit, BitPos(TRISC5_bit+0)
;__Lib_SPI_c345.c,20 :: 		
0x01E7	0x1187      	BCF        TRISC3_bit, BitPos(TRISC3_bit+0)
;__Lib_SPI_c345.c,21 :: 		
0x01E8	0x1607      	BSF        TRISC4_bit, BitPos(TRISC4_bit+0)
;__Lib_SPI_c345.c,23 :: 		
0x01E9	0x1283      	BCF        STATUS, 5
0x01EA	0x0194      	CLRF       SSPCON
;__Lib_SPI_c345.c,24 :: 		
0x01EB	0x3040      	MOVLW      64
0x01EC	0x1683      	BSF        STATUS, 5
0x01ED	0x0094      	MOVWF      SSPSTAT
;__Lib_SPI_c345.c,25 :: 		
0x01EE	0x1283      	BCF        STATUS, 5
0x01EF	0x1694      	BSF        SSPCON, 5
;__Lib_SPI_c345.c,27 :: 		
L_end_SPI1_Init:
0x01F0	0x0008      	RETURN
; end of _SPI1_Init
_UART1_Init:
;__Lib_UART_c67.c,2 :: 		
;__Lib_UART_c67.c,5 :: 		
0x01F1	0x1683      	BSF        STATUS, 5
0x01F2	0x1303      	BCF        STATUS, 6
0x01F3	0x1698      	BSF        TXSTA, 5
;__Lib_UART_c67.c,6 :: 		
0x01F4	0x3090      	MOVLW      144
0x01F5	0x1283      	BCF        STATUS, 5
0x01F6	0x0098      	MOVWF      RCSTA
;__Lib_UART_c67.c,7 :: 		
0x01F7	0x1683      	BSF        STATUS, 5
0x01F8	0x1787      	BSF        TRISC7_bit, BitPos(TRISC7_bit+0)
;__Lib_UART_c67.c,8 :: 		
0x01F9	0x1307      	BCF        TRISC6_bit, BitPos(TRISC6_bit+0)
;__Lib_UART_c67.c,10 :: 		
L_UART1_Init0:
0x01FA	0x1283      	BCF        STATUS, 5
0x01FB	0x1E8C      	BTFSS      PIR1, 5
0x01FC	0x2A00      	GOTO       L_UART1_Init1
;__Lib_UART_c67.c,11 :: 		
0x01FD	0x081A      	MOVF       RCREG, 0
0x01FE	0x00F0      	MOVWF      R0
0x01FF	0x29FA      	GOTO       L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,12 :: 		
L_end_UART1_Init:
0x0200	0x0008      	RETURN
; end of _UART1_Init
_UART1_Write:
;__Lib_UART_c67.c,39 :: 		
;__Lib_UART_c67.c,40 :: 		
L_UART1_Write3:
0x0201	0x1683      	BSF        STATUS, 5
0x0202	0x1303      	BCF        STATUS, 6
0x0203	0x1898      	BTFSC      TXSTA, 1
0x0204	0x2A07      	GOTO       L_UART1_Write4
;__Lib_UART_c67.c,41 :: 		
0x0205	0x0000      	NOP
0x0206	0x2A01      	GOTO       L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,42 :: 		
0x0207	0x1283      	BCF        STATUS, 5
0x0208	0x0866      	MOVF       FARG_UART1_Write_data_, 0
0x0209	0x0099      	MOVWF      TXREG
;__Lib_UART_c67.c,43 :: 		
L_end_UART1_Write:
0x020A	0x0008      	RETURN
; end of _UART1_Write
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x020B	0x1683      	BSF        STATUS, 5
0x020C	0x1303      	BCF        STATUS, 6
0x020D	0x1208      	BCF        LCD_EN_Direction, BitPos(LCD_EN_Direction+0)
;__Lib_Lcd.c,87 :: 		
0x020E	0x1288      	BCF        LCD_RS_Direction, BitPos(LCD_RS_Direction+0)
;__Lib_Lcd.c,88 :: 		
0x020F	0x1008      	BCF        LCD_D4_Direction, BitPos(LCD_D4_Direction+0)
;__Lib_Lcd.c,89 :: 		
0x0210	0x1088      	BCF        LCD_D5_Direction, BitPos(LCD_D5_Direction+0)
;__Lib_Lcd.c,90 :: 		
0x0211	0x1108      	BCF        LCD_D6_Direction, BitPos(LCD_D6_Direction+0)
;__Lib_Lcd.c,91 :: 		
0x0212	0x1188      	BCF        LCD_D7_Direction, BitPos(LCD_D7_Direction+0)
;__Lib_Lcd.c,93 :: 		
0x0213	0x1283      	BCF        STATUS, 5
0x0214	0x1208      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,94 :: 		
0x0215	0x1288      	BCF        LCD_RS, BitPos(LCD_RS+0)
;__Lib_Lcd.c,95 :: 		
0x0216	0x1188      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,96 :: 		
0x0217	0x1108      	BCF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,97 :: 		
0x0218	0x1088      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,98 :: 		
0x0219	0x1008      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,100 :: 		
0x021A	0x205D      	CALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x021B	0x205D      	CALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x021C	0x205D      	CALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x021D	0x1488      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,106 :: 		
0x021E	0x1408      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,107 :: 		
0x021F	0x1608      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,108 :: 		
0x0220	0x2050      	CALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x0221	0x1208      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,110 :: 		
0x0222	0x205D      	CALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x0223	0x1608      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,113 :: 		
0x0224	0x2050      	CALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x0225	0x1208      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,115 :: 		
0x0226	0x205D      	CALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x0227	0x1608      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,118 :: 		
0x0228	0x2050      	CALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x0229	0x1208      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,120 :: 		
0x022A	0x205D      	CALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x022B	0x1008      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,124 :: 		
0x022C	0x1608      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,125 :: 		
0x022D	0x2050      	CALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x022E	0x1208      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,127 :: 		
0x022F	0x205D      	CALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x0230	0x1608      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,131 :: 		
0x0231	0x2050      	CALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x0232	0x1208      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,134 :: 		
0x0233	0x1088      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,135 :: 		
0x0234	0x1588      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,136 :: 		
0x0235	0x1608      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,137 :: 		
0x0236	0x2050      	CALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x0237	0x1208      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,139 :: 		
0x0238	0x205D      	CALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x0239	0x1188      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,143 :: 		
0x023A	0x1408      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,144 :: 		
0x023B	0x1608      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,145 :: 		
0x023C	0x2050      	CALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x023D	0x1208      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,148 :: 		
0x023E	0x1008      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,149 :: 		
0x023F	0x1608      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,150 :: 		
0x0240	0x2050      	CALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x0241	0x1208      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,152 :: 		
0x0242	0x205D      	CALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x0243	0x1608      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,156 :: 		
0x0244	0x2050      	CALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x0245	0x1208      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,159 :: 		
0x0246	0x1408      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,160 :: 		
0x0247	0x1608      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,161 :: 		
0x0248	0x2050      	CALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x0249	0x1208      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,163 :: 		
0x024A	0x205D      	CALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x024B	0x1008      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,167 :: 		
0x024C	0x1608      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,168 :: 		
0x024D	0x2050      	CALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x024E	0x1208      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,171 :: 		
0x024F	0x1588      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,172 :: 		
0x0250	0x1508      	BSF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,173 :: 		
0x0251	0x1488      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,174 :: 		
0x0252	0x1408      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,175 :: 		
0x0253	0x1608      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,176 :: 		
0x0254	0x2050      	CALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x0255	0x1208      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,179 :: 		
0x0256	0x205D      	CALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x0257	0x1446      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x0258	0x0008      	RETURN
; end of _Lcd_Init
_ADC_Read:
;__Lib_ADC_88X.c,55 :: 		
;__Lib_ADC_88X.c,57 :: 		
0x0259	0x30C3      	MOVLW      195
0x025A	0x1283      	BCF        STATUS, 5
0x025B	0x1303      	BCF        STATUS, 6
0x025C	0x059F      	ANDWF      ADCON0, 1
;__Lib_ADC_88X.c,61 :: 		
0x025D	0x30C0      	MOVLW      192
0x025E	0x009F      	MOVWF      ADCON0
;__Lib_ADC_88X.c,62 :: 		
0x025F	0x0857      	MOVF       FARG_ADC_Read_channel, 0
0x0260	0x00F0      	MOVWF      R0
0x0261	0x0DF0      	RLF        R0, 1
0x0262	0x1070      	BCF        R0, 0
0x0263	0x0DF0      	RLF        R0, 1
0x0264	0x1070      	BCF        R0, 0
0x0265	0x0870      	MOVF       R0, 0
0x0266	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_88X.c,63 :: 		
0x0267	0x1683      	BSF        STATUS, 5
0x0268	0x179F      	BSF        ADCON1, 7
;__Lib_ADC_88X.c,66 :: 		
0x0269	0x1283      	BCF        STATUS, 5
0x026A	0x141F      	BSF        ADCON0, 0
;__Lib_ADC_88X.c,69 :: 		
0x026B	0x20D4      	CALL       _Delay_22us
;__Lib_ADC_88X.c,72 :: 		
0x026C	0x149F      	BSF        ADCON0, 1
;__Lib_ADC_88X.c,75 :: 		
L_ADC_Read2:
0x026D	0x1C9F      	BTFSS      ADCON0, 1
0x026E	0x2A71      	GOTO       L_ADC_Read3
;__Lib_ADC_88X.c,76 :: 		
0x026F	0x0000      	NOP
0x0270	0x2A6D      	GOTO       L_ADC_Read2
L_ADC_Read3:
;__Lib_ADC_88X.c,79 :: 		
0x0271	0x101F      	BCF        ADCON0, 0
;__Lib_ADC_88X.c,82 :: 		
0x0272	0x081E      	MOVF       ADRESH, 0
0x0273	0x00F1      	MOVWF      R0+1
0x0274	0x01F0      	CLRF       R0
0x0275	0x1683      	BSF        STATUS, 5
0x0276	0x081E      	MOVF       ADRESL, 0
0x0277	0x04F0      	IORWF      R0, 1
0x0278	0x3000      	MOVLW      0
0x0279	0x04F1      	IORWF      R0+1, 1
;__Lib_ADC_88X.c,83 :: 		
L_end_ADC_Read:
0x027A	0x0008      	RETURN
; end of _ADC_Read
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x027B	0x20CD      	CALL       _____DoICP
0x027C	0x118A      	BCF        PCLATH, 3
0x027D	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x027E	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x027F	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0280	0x0AB9      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0281	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0282	0x0ABA      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0283	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0284	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0285	0x2A7B      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0286	0x0008      	RETURN
; end of ___CC2DW
_main:
0x0287	0x3044      	MOVLW      68
0x0288	0x1283      	BCF        STATUS, 5
0x0289	0x1303      	BCF        STATUS, 6
0x028A	0x00A1      	MOVWF      ?lstr2_Pic16
0x028B	0x3041      	MOVLW      65
0x028C	0x00A2      	MOVWF      34
0x028D	0x3043      	MOVLW      67
0x028E	0x00A3      	MOVWF      35
0x028F	0x3020      	MOVLW      32
0x0290	0x00A4      	MOVWF      36
0x0291	0x3056      	MOVLW      86
0x0292	0x00A5      	MOVWF      37
0x0293	0x3061      	MOVLW      97
0x0294	0x00A6      	MOVWF      38
0x0295	0x306C      	MOVLW      108
0x0296	0x00A7      	MOVWF      39
0x0297	0x3075      	MOVLW      117
0x0298	0x00A8      	MOVWF      40
0x0299	0x3065      	MOVLW      101
0x029A	0x00A9      	MOVWF      41
0x029B	0x303A      	MOVLW      58
0x029C	0x00AA      	MOVWF      42
0x029D	0x01AB      	CLRF       43
0x029E	0x3041      	MOVLW      65
0x029F	0x00AC      	MOVWF      ?lstr1_Pic16
0x02A0	0x3044      	MOVLW      68
0x02A1	0x00AD      	MOVWF      45
0x02A2	0x3043      	MOVLW      67
0x02A3	0x00AE      	MOVWF      46
0x02A4	0x3020      	MOVLW      32
0x02A5	0x00AF      	MOVWF      47
0x02A6	0x3056      	MOVLW      86
0x02A7	0x00B0      	MOVWF      48
0x02A8	0x3061      	MOVLW      97
0x02A9	0x00B1      	MOVWF      49
0x02AA	0x306C      	MOVLW      108
0x02AB	0x00B2      	MOVWF      50
0x02AC	0x3075      	MOVLW      117
0x02AD	0x00B3      	MOVWF      51
0x02AE	0x3065      	MOVLW      101
0x02AF	0x00B4      	MOVWF      52
0x02B0	0x303A      	MOVLW      58
0x02B1	0x00B5      	MOVWF      53
0x02B2	0x01B6      	CLRF       54
;Pic16.c,72 :: 		void main() {
;Pic16.c,74 :: 		CCP1CON = 0;   // Disable comparators
0x02B3	0x0197      	CLRF       CCP1CON
;Pic16.c,76 :: 		ANSEL  = 0xFF;   // Configure AN0- AN7 pins as analog I/O
0x02B4	0x30FF      	MOVLW      255
0x02B5	0x1683      	BSF        STATUS, 5
0x02B6	0x1703      	BSF        STATUS, 6
0x02B7	0x0088      	MOVWF      ANSEL
;Pic16.c,77 :: 		ANSELH = 0;      //configure AN8-AN13 as digital
0x02B8	0x0189      	CLRF       ANSELH
;Pic16.c,78 :: 		C1ON_bit = 0;    // Disable comparators
0x02B9	0x1283      	BCF        STATUS, 5
0x02BA	0x1387      	BCF        C1ON_bit, BitPos(C1ON_bit+0)
;Pic16.c,79 :: 		C2ON_bit = 0;
0x02BB	0x1388      	BCF        C2ON_bit, BitPos(C2ON_bit+0)
;Pic16.c,80 :: 		TRISA.B0  = 1;  // analog pin is input
0x02BC	0x1683      	BSF        STATUS, 5
0x02BD	0x1303      	BCF        STATUS, 6
0x02BE	0x1405      	BSF        TRISA, 0
;Pic16.c,81 :: 		mode_dir =1;    //plc mode pin is input
0x02BF	0x1605      	BSF        TRISA4_bit, BitPos(TRISA4_bit+0)
;Pic16.c,82 :: 		TRISD  = 0;     // lcd port is output
0x02C0	0x0188      	CLRF       TRISD
;Pic16.c,83 :: 		trisb =0x0F;    //portb{0..3}=inputs and portb{4..7} are outputs
0x02C1	0x300F      	MOVLW      15
0x02C2	0x0086      	MOVWF      TRISB
;Pic16.c,84 :: 		mcp_cs_dir=0;  //MCP Chip Select pin is output
0x02C3	0x1085      	BCF        TRISA1_bit, BitPos(TRISA1_bit+0)
;Pic16.c,85 :: 		mcp_cs=1;      //Disable MCP DAC
0x02C4	0x1283      	BCF        STATUS, 5
0x02C5	0x1485      	BSF        RA1_bit, BitPos(RA1_bit+0)
;Pic16.c,87 :: 		intcon.gie=1;   //globally enable all interrupts
0x02C6	0x178B      	BSF        INTCON, 7
;Pic16.c,88 :: 		intcon.peie=1;  //Enables all unmasked peripheral interrupts
0x02C7	0x170B      	BSF        INTCON, 6
;Pic16.c,89 :: 		pie1.rcie=1;     //Enables the EUSART receive interrupt
0x02C8	0x1683      	BSF        STATUS, 5
0x02C9	0x168C      	BSF        PIE1, 5
;Pic16.c,90 :: 		UART1_Init(9600); //init uart at 9600 bits per second
0x02CA	0x3067      	MOVLW      103
0x02CB	0x0099      	MOVWF      SPBRG
0x02CC	0x1518      	BSF        TXSTA, 2
0x02CD	0x21F1      	CALL       _UART1_Init
;Pic16.c,91 :: 		delay_ms(100);    //wait for uart initialization
0x02CE	0x3003      	MOVLW      3
0x02CF	0x00FB      	MOVWF      R11
0x02D0	0x3008      	MOVLW      8
0x02D1	0x00FC      	MOVWF      R12
0x02D2	0x3077      	MOVLW      119
0x02D3	0x00FD      	MOVWF      R13
L_main12:
0x02D4	0x0BFD      	DECFSZ     R13, 1
0x02D5	0x2AD4      	GOTO       L_main12
0x02D6	0x0BFC      	DECFSZ     R12, 1
0x02D7	0x2AD4      	GOTO       L_main12
0x02D8	0x0BFB      	DECFSZ     R11, 1
0x02D9	0x2AD4      	GOTO       L_main12
;Pic16.c,93 :: 		Lcd_Init();      // Initialize LCD
0x02DA	0x220B      	CALL       _Lcd_Init
;Pic16.c,94 :: 		Lcd_Cmd(_LCD_CLEAR);   // Clear display
0x02DB	0x3001      	MOVLW      1
0x02DC	0x00E5      	MOVWF      FARG_Lcd_Cmd_out_char
0x02DD	0x2068      	CALL       _Lcd_Cmd
;Pic16.c,95 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);  // Cursor off
0x02DE	0x300C      	MOVLW      12
0x02DF	0x00E5      	MOVWF      FARG_Lcd_Cmd_out_char
0x02E0	0x2068      	CALL       _Lcd_Cmd
;Pic16.c,96 :: 		Lcd_Out(1, 1, "ADC Value:"); // Write text in first row
0x02E1	0x3001      	MOVLW      1
0x02E2	0x00D7      	MOVWF      FARG_Lcd_Out_row
0x02E3	0x3001      	MOVLW      1
0x02E4	0x00D8      	MOVWF      FARG_Lcd_Out_column
0x02E5	0x302C      	MOVLW      ?lstr1_Pic16
0x02E6	0x00D9      	MOVWF      FARG_Lcd_Out_text
0x02E7	0x212D      	CALL       _Lcd_Out
;Pic16.c,97 :: 		Lcd_Out(2, 1, "DAC Value:"); // Write text in second row
0x02E8	0x3002      	MOVLW      2
0x02E9	0x00D7      	MOVWF      FARG_Lcd_Out_row
0x02EA	0x3001      	MOVLW      1
0x02EB	0x00D8      	MOVWF      FARG_Lcd_Out_column
0x02EC	0x3021      	MOVLW      ?lstr2_Pic16
0x02ED	0x00D9      	MOVWF      FARG_Lcd_Out_text
0x02EE	0x212D      	CALL       _Lcd_Out
;Pic16.c,98 :: 		delay_ms(10);
0x02EF	0x3034      	MOVLW      52
0x02F0	0x00FC      	MOVWF      R12
0x02F1	0x30F1      	MOVLW      241
0x02F2	0x00FD      	MOVWF      R13
L_main13:
0x02F3	0x0BFD      	DECFSZ     R13, 1
0x02F4	0x2AF3      	GOTO       L_main13
0x02F5	0x0BFC      	DECFSZ     R12, 1
0x02F6	0x2AF3      	GOTO       L_main13
0x02F7	0x0000      	NOP
0x02F8	0x0000      	NOP
;Pic16.c,99 :: 		adc_init();      //initialize ADC
0x02F9	0x211B      	CALL       _ADC_Init
;Pic16.c,100 :: 		delay_ms(10);
0x02FA	0x3034      	MOVLW      52
0x02FB	0x00FC      	MOVWF      R12
0x02FC	0x30F1      	MOVLW      241
0x02FD	0x00FD      	MOVWF      R13
L_main14:
0x02FE	0x0BFD      	DECFSZ     R13, 1
0x02FF	0x2AFE      	GOTO       L_main14
0x0300	0x0BFC      	DECFSZ     R12, 1
0x0301	0x2AFE      	GOTO       L_main14
0x0302	0x0000      	NOP
0x0303	0x0000      	NOP
;Pic16.c,102 :: 		SPI1_Init();
0x0304	0x21E4      	CALL       _SPI1_Init
;Pic16.c,103 :: 		delay_ms(100);
0x0305	0x3003      	MOVLW      3
0x0306	0x00FB      	MOVWF      R11
0x0307	0x3008      	MOVLW      8
0x0308	0x00FC      	MOVWF      R12
0x0309	0x3077      	MOVLW      119
0x030A	0x00FD      	MOVWF      R13
L_main15:
0x030B	0x0BFD      	DECFSZ     R13, 1
0x030C	0x2B0B      	GOTO       L_main15
0x030D	0x0BFC      	DECFSZ     R12, 1
0x030E	0x2B0B      	GOTO       L_main15
0x030F	0x0BFB      	DECFSZ     R11, 1
0x0310	0x2B0B      	GOTO       L_main15
;Pic16.c,105 :: 		session=0;
0x0311	0x01D4      	CLRF       _session
;Pic16.c,106 :: 		anOut=0;
0x0312	0x01D2      	CLRF       _anOut
0x0313	0x01D3      	CLRF       _anOut+1
;Pic16.c,108 :: 		do {
L_main16:
;Pic16.c,109 :: 		if(mode){ //Only if we are in run mode
0x0314	0x1E05      	BTFSS      RA4_bit, BitPos(RA4_bit+0)
0x0315	0x2B58      	GOTO       L_main19
;Pic16.c,110 :: 		anIn = ADC_Read(0); // Get 10-bit result of AD conversion
0x0316	0x01D7      	CLRF       FARG_ADC_Read_channel
0x0317	0x2259      	CALL       _ADC_Read
0x0318	0x0870      	MOVF       R0, 0
0x0319	0x1283      	BCF        STATUS, 5
0x031A	0x00C4      	MOVWF      _anIn
0x031B	0x0871      	MOVF       R0+1, 0
0x031C	0x00C5      	MOVWF      _anIn+1
;Pic16.c,111 :: 		mcp_cs = 0; //Select MCP4921 DAC
0x031D	0x1085      	BCF        RA1_bit, BitPos(RA1_bit+0)
;Pic16.c,112 :: 		temp = Hi(anOut)&0xF; // Store valueDAC[11..8] to temp[3..0]
0x031E	0x300F      	MOVLW      15
0x031F	0x0553      	ANDWF      _anOut+1, 0
0x0320	0x00F0      	MOVWF      R0
0x0321	0x0870      	MOVF       R0, 0
0x0322	0x00C3      	MOVWF      _temp
;Pic16.c,113 :: 		temp |= 0x30; // Define DAC setting, see MCP4921 datasheet
0x0323	0x3030      	MOVLW      48
0x0324	0x04F0      	IORWF      R0, 1
0x0325	0x0870      	MOVF       R0, 0
0x0326	0x00C3      	MOVWF      _temp
;Pic16.c,114 :: 		SPI1_Write(temp); // Send high byte via SPI_Soft
0x0327	0x0870      	MOVF       R0, 0
0x0328	0x00D7      	MOVWF      FARG_SPI1_Write_data_
0x0329	0x21D7      	CALL       _SPI1_Write
;Pic16.c,116 :: 		temp = Lo(anOut);
0x032A	0x0852      	MOVF       _anOut, 0
0x032B	0x00C3      	MOVWF      _temp
;Pic16.c,117 :: 		SPI1_Write(temp); // Send low byte via SPI
0x032C	0x0852      	MOVF       _anOut, 0
0x032D	0x00D7      	MOVWF      FARG_SPI1_Write_data_
0x032E	0x21D7      	CALL       _SPI1_Write
;Pic16.c,118 :: 		mcp_cs = 1; //Disable DAC
0x032F	0x1485      	BSF        RA1_bit, BitPos(RA1_bit+0)
;Pic16.c,120 :: 		IntToStr(anIn, line1);
0x0330	0x0844      	MOVF       _anIn, 0
0x0331	0x00D7      	MOVWF      FARG_IntToStr_input
0x0332	0x0845      	MOVF       _anIn+1, 0
0x0333	0x00D8      	MOVWF      FARG_IntToStr_input+1
0x0334	0x303B      	MOVLW      Pic16_line1
0x0335	0x00D9      	MOVWF      FARG_IntToStr_output
0x0336	0x216D      	CALL       _IntToStr
;Pic16.c,121 :: 		Lcd_Out(1, 11, line1); // Display analogue input in row1
0x0337	0x3001      	MOVLW      1
0x0338	0x00D7      	MOVWF      FARG_Lcd_Out_row
0x0339	0x300B      	MOVLW      11
0x033A	0x00D8      	MOVWF      FARG_Lcd_Out_column
0x033B	0x303B      	MOVLW      Pic16_line1
0x033C	0x00D9      	MOVWF      FARG_Lcd_Out_text
0x033D	0x212D      	CALL       _Lcd_Out
;Pic16.c,122 :: 		IntToStr(anOut, line2);
0x033E	0x0852      	MOVF       _anOut, 0
0x033F	0x00D7      	MOVWF      FARG_IntToStr_input
0x0340	0x0853      	MOVF       _anOut+1, 0
0x0341	0x00D8      	MOVWF      FARG_IntToStr_input+1
0x0342	0x304A      	MOVLW      Pic16_line2
0x0343	0x00D9      	MOVWF      FARG_IntToStr_output
0x0344	0x216D      	CALL       _IntToStr
;Pic16.c,123 :: 		Lcd_Out(2, 11, line2); // Display analogue output in row2
0x0345	0x3002      	MOVLW      2
0x0346	0x00D7      	MOVWF      FARG_Lcd_Out_row
0x0347	0x300B      	MOVLW      11
0x0348	0x00D8      	MOVWF      FARG_Lcd_Out_column
0x0349	0x304A      	MOVLW      Pic16_line2
0x034A	0x00D9      	MOVWF      FARG_Lcd_Out_text
0x034B	0x212D      	CALL       _Lcd_Out
;Pic16.c,124 :: 		delay_ms(100);
0x034C	0x3003      	MOVLW      3
0x034D	0x00FB      	MOVWF      R11
0x034E	0x3008      	MOVLW      8
0x034F	0x00FC      	MOVWF      R12
0x0350	0x3077      	MOVLW      119
0x0351	0x00FD      	MOVWF      R13
L_main20:
0x0352	0x0BFD      	DECFSZ     R13, 1
0x0353	0x2B52      	GOTO       L_main20
0x0354	0x0BFC      	DECFSZ     R12, 1
0x0355	0x2B52      	GOTO       L_main20
0x0356	0x0BFB      	DECFSZ     R11, 1
0x0357	0x2B52      	GOTO       L_main20
;Pic16.c,125 :: 		}
L_main19:
;Pic16.c,126 :: 		} while(1);
0x0358	0x2B14      	GOTO       L_main16
;Pic16.c,128 :: 		}
L_end_main:
0x0359	0x2B59      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [76]    _interrupt
0x0050       [5]    _Delay_1us
0x0055       [8]    _Delay_50us
0x005D      [11]    _Delay_5500us
0x0068      [64]    _Lcd_Cmd
0x00A8      [29]    _Div_16X16_U
0x00C5       [8]    _Lcd_Chr_CP
0x00CD       [7]    _____DoICP
0x00D4       [7]    _Delay_22us
0x00DB      [64]    _WordToStr
0x011B      [18]    _ADC_Init
0x012D      [64]    _Lcd_Out
0x016D     [106]    _IntToStr
0x01D7      [13]    _SPI1_Write
0x01E4      [13]    _SPI1_Init
0x01F1      [16]    _UART1_Init
0x0201      [10]    _UART1_Write
0x020B      [78]    _Lcd_Init
0x0259      [34]    _ADC_Read
0x027B      [12]    ___CC2DW
0x0287     [211]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [0]    mcp_cs
0x0005       [0]    RA1_bit
0x0005       [0]    RA4_bit
0x0005       [0]    mode
0x0006       [1]    PORTB
0x0006       [1]    dio
0x0008       [0]    RD5_bit
0x0008       [0]    RD1_bit
0x0008       [0]    RD0_bit
0x0008       [0]    LCD_D6
0x0008       [0]    LCD_D5
0x0008       [0]    LCD_D4
0x0008       [0]    LCD_D7
0x0008       [0]    RD3_bit
0x0008       [0]    RD2_bit
0x0008       [0]    LCD_RS
0x0008       [0]    LCD_EN
0x0008       [0]    RD4_bit
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000C       [1]    PIR1
0x0013       [1]    SSPBUF
0x0014       [1]    SSPCON
0x0017       [1]    CCP1CON
0x0018       [1]    RCSTA
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x001E       [1]    ADRESH
0x001F       [1]    ADCON0
0x0021      [11]    ?lstr2_Pic16
0x002C      [11]    ?lstr1_Pic16
0x0037       [1]    _txByte
0x0038       [1]    _rxByte
0x0039       [2]    ___DoICPAddr
0x003B       [8]    Pic16_line1
0x0043       [1]    _temp
0x0044       [2]    _anIn
0x0046       [0]    __Lib_Lcd_cmd_status
0x0047       [3]    _ADC_Get_Sample_Ptr
0x004A       [8]    Pic16_line2
0x0052       [2]    _anOut
0x0054       [1]    _session
0x0055       [1]    ___saveSTATUS
0x0056       [1]    ___savePCLATH
0x0057       [1]    FARG_ADC_Read_channel
0x0057       [2]    FARG_IntToStr_input
0x0057       [1]    FARG_SPI1_Write_data_
0x0057       [1]    FARG_Lcd_Out_row
0x0058       [1]    FARG_Lcd_Out_column
0x0059       [1]    FARG_IntToStr_output
0x0059       [1]    FARG_Lcd_Out_text
0x005A       [2]    IntToStr_i_L0
0x005A       [1]    Lcd_Out_i_L0
0x005C       [2]    IntToStr_negative_L0
0x005E       [2]    IntToStr_inword_L0
0x0060       [2]    FARG_WordToStr_input
0x0060       [1]    FARG_Lcd_Chr_CP_out_char
0x0062       [1]    FARG_WordToStr_output
0x0063       [1]    WordToStr_len_L0
0x0064       [1]    FLOC__WordToStr
0x0065       [1]    FARG_Lcd_Cmd_out_char
0x0066       [1]    FARG_UART1_Write_data_
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0085       [0]    mcp_cs_dir
0x0085       [0]    mode_dir
0x0085       [0]    TRISA1_bit
0x0085       [0]    TRISA4_bit
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [0]    TRISC7_bit
0x0087       [0]    TRISC5_bit
0x0087       [0]    TRISC4_bit
0x0087       [0]    TRISC6_bit
0x0087       [0]    TRISC3_bit
0x0088       [0]    TRISD3_bit
0x0088       [0]    TRISD0_bit
0x0088       [0]    TRISD1_bit
0x0088       [0]    TRISD2_bit
0x0088       [0]    LCD_RS_Direction
0x0088       [0]    TRISD5_bit
0x0088       [0]    LCD_D4_Direction
0x0088       [0]    LCD_D5_Direction
0x0088       [0]    LCD_D7_Direction
0x0088       [0]    LCD_EN_Direction
0x0088       [0]    LCD_D6_Direction
0x0088       [1]    TRISD
0x0088       [0]    TRISD4_bit
0x008C       [1]    PIE1
0x0094       [1]    SSPSTAT
0x0098       [1]    TXSTA
0x0099       [1]    SPBRG
0x009A       [1]    SPBRGH
0x009E       [1]    ADRESL
0x009F       [1]    ADCON1
0x0107       [0]    C1ON_bit
0x0108       [0]    C2ON_bit
0x0188       [1]    ANSEL
0x0189       [1]    ANSELH
